<?php

class ExploitationTest extends TestCase {

  public function testCrudExploitation()
  {
    $user = new User();
    $user->login(array('email' => 'admin', 'password' => 'admin'));
    
    $exploitation = array();
    $exploitation['Ref'] = 'E100'; //Référence de l'exploitation'
    $exploitation['Nom'] = 'Exploitation de test'; //Nom de l'exploitation'
    $exploitation['Superficie'] = 100;
    $exploitation['Longitude'] = 1000000;
    $exploitation['Latitude'] = 20000;
    $exploitation['NbrCultivateur'] = 3;
    $exploitation['ProduitID'] = array(1, 3);
    $exploitation['VilleID'] = 1;
    
    //Création entité
    $response = $this->call('POST', '/exploitation', $exploitation);

    //Vérifier la redirection vers la vue
    $this->assertRedirectedTo('exploitation');
    $this->assertSessionHas('success');
    
    //Vérifier que la réponse contient l'url  pour modification
    $message = $response->getSession()->get('success');
    $content = $response->getContent();
    $pattern = "/exploitation\/([\d]+)\//";
    $this->assertRegExp($pattern, $message);
    preg_match_all($pattern, $message, $exploitationIdFinded);
    $this->assertCount(2, $exploitationIdFinded, "Après la création, la vue qui suit doit contenir le numero de l'entité dans le lien de modification");

    $exploitationId = $exploitationIdFinded[1][0];;

    //modification des informations 
    $exploitation = array();
    $exploitation['Ref'] = 'E100'; //Référence de l'exploitation'
    $exploitation['Nom'] = 'Exploitation de test'; //Nom de l'exploitation'
    $exploitation['Superficie'] = 100;
    $exploitation['Longitude'] = 1000000;
    $exploitation['Latitude'] = 20000;
    $exploitation['NbrCultivateur'] = 3;
    $exploitation['VilleID'] = 1;
    
    $response = $this->call('PUT', '/exploitation/' . $exploitationId, $exploitation);

    $this->assertRedirectedTo('exploitation');
    $this->assertSessionHas('success');
    
    //Vérifier que la réponse contient l'url  pour modification
    $message = $response->getSession()->get('success');
    $content = $response->getContent();
    $pattern = "/exploitation\/([\d]+)\//";
    $this->assertRegExp($pattern, $message);
    preg_match_all($pattern, $message, $exploitationIdFinded);
    $this->assertCount(2, $exploitationIdFinded, "Après la modification, la vue qui suit doit contenir le numero dans le lien de modification");

    //Suppression
    $response = $this->call('DELETE', '/exploitation/' . $exploitationId);

  }

}
